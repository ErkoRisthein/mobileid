apply plugin: 'java'
apply plugin: 'maven'

group = 'com.codeborne'
archivesBaseName = 'mobileid'
version = '0.9.6-SNAPSHOT'
sourceCompatibility = 1.5
targetCompatibility = 1.5

defaultTasks 'clean', 'copy-libs', 'copy-test-libs', 'test', 'install'

repositories{
  mavenCentral()
}

sourceSets {
  main {
    java {
      srcDir 'src'
    }
  }
  test {
    java {
      srcDir 'test'
    }
  }
}

compileJava.options.debugOptions.debugLevel = "source,lines,vars"
[compileJava, compileTestJava, javadoc]*.options.collect {options ->
  options.encoding = 'UTF-8'
}

[compileJava, compileTestJava]*.options.collect {options ->
  options.debug = true
  options.deprecation = true
  options.compilerArgs.add '-Xlint'
  options.compilerArgs.add '-Xlint:-unchecked'
  options.compilerArgs.add '-Xlint:-serial'
  options.compilerArgs.add '-Xlint:-rawtypes'
}

dependencies {
  compile 'org.apache.axis:axis:1.4'
  compile 'org.apache.axis:axis-jaxrpc:1.4'
  compile 'commons-discovery:commons-discovery:0.4'
  compile 'wsdl4j:wsdl4j:1.6.2'
  testCompile 'junit:junit:4.11'
  testCompile 'org.hamcrest:hamcrest-all:1.3'
  testCompile 'org.mockito:mockito-all:1.9.5'
}

task 'copy-libs'(type: Sync) {
  from configurations.compile
  into "$buildDir/libs"
}

task 'copy-test-libs'(type: Sync) {
  from configurations.testCompile
  into "$buildDir/libs-test"
}

task sourcesJar(type: Jar, dependsOn:classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives jar
  archives sourcesJar
  archives javadocJar
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.1'
  jarFile = './gradle-wrapper/gradle-wrapper.jar'
  scriptFile = './gradle'
}

